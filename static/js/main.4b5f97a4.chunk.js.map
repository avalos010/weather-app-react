{"version":3,"sources":["components/weatherInfo.js","components/CurrentWeather.js","components/forecast.js","components/Spinner.js","components/fiveDay.js","components/App.js","index.js"],"names":["WeatherInfo","title","thumbnail","temp","description","className","style","width","src","alt","i","CurrentWeather","state","city","lon","lat","showInput","handleUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","handleWaitonLocation","alert","handleUserInput","fetch","response","json","result","name","weather","icon","Math","floor","main","console","log","url","this","height","htmlFor","type","id","onChange","e","target","value","onClick","to","pathname","Component","Forecast","forecastData","map","w","index","key","dt_txt","temp_min","temp_max","wind","speed","Spinner","color","FiveDay","props","useState","setForecastData","setLat","setLon","setCity","handleLoadForecast","list","country","handleUserLocationInput","location","useEffect","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b5f97a4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction WeatherInfo({ title, thumbnail, temp, description }) {\n  return (\n    <div className=\"container\">\n      <div className=\"card p-3\">\n        <p className=\"lead font-weight-bold\">{title}</p>\n        <div className=\"m-3\">\n          {thumbnail && (\n            <img\n              style={{ width: 80 }}\n              src={`https://openweathermap.org/img/w/${thumbnail}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={description}\n            />\n          )}\n        </div>\n        <div className=\"card-body \">\n          <p className=\"card-text\">\n            <span className=\"font-weight-bold\">{temp}Â°F</span>\n            <br />\n            {description}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherInfo;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport WeatherInfo from \"./weatherInfo\";\n\nclass CurrentWeather extends Component {\n  state = {\n    city: \"\",\n    thumbnail: \"\",\n    title: \"\",\n    description: \"\",\n    temp: 0,\n    lon: null,\n    lat: null,\n    showInput: true\n  };\n\n  handleUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          this.setState({ lat: latitude, lon: longitude, showInput: false });\n          this.handleWaitonLocation();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    }\n  };\n\n  handleUserInput = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.city\n      }&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n    );\n\n    const result = await response.json();\n\n    result\n      ? this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        })\n      : console.log(\"loading\");\n  };\n\n  handleWaitonLocation = async () => {\n    const { lon, lat } = this.state;\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=759c56787a1afffcc7c0185fe8bfb310&units=imperial`;\n    const response = await fetch(url);\n    const result = await response.json();\n\n    result\n      ? this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        })\n      : console.log(\"loading\");\n  };\n\n  render() {\n    const { temp, title, thumbnail, description, city } = this.state;\n    return (\n      <div className=\"jumbotron  text-center\" style={{ height: \"95vh\" }}>\n        <h2 className=\"display-4 mt-3\">Current Weather</h2>\n        {title && (\n          <WeatherInfo\n            temp={temp}\n            title={title}\n            thumbnail={thumbnail}\n            description={description}\n          />\n        )}\n        {!title && (\n          <div className=\"d-flex flex-column\">\n            <label htmlFor=\"location\">Enter City:</label>\n            <input\n              className=\" mx-auto border border-white rounded\"\n              type=\"text\"\n              id=\"location\"\n              onChange={e => this.setState({ city: e.target.value })}\n            />\n          </div>\n        )}\n        {!title && (\n          <div className=\"d-flex flex-row justify-content-center mt-3\">\n            <button\n              onClick={this.handleUserInput}\n              className=\"btn btn-dark ml-3\"\n            >\n              Search\n            </button>\n            <button\n              onClick={this.handleUserLocation}\n              className=\"btn btn-light ml-3\"\n            >\n              Find Me\n            </button>\n          </div>\n        )}\n        {title && (\n          <Link\n            state={this.state.city}\n            className=\" mt-3 btn btn-dark\"\n            to={{\n              pathname: \"/forecast\",\n              city\n            }}\n          >\n            See Forecast\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\n\nconst Forecast = ({ forecastData }) => (\n  <div className=\"forecast\">\n    {forecastData.map((w, index) => {\n      return (\n        <div className=\"forecast_container\" key={index}>\n          <p className=\"forcecast_date\">{w.dt_txt}</p>\n          <div className=\"forecast_min_max\">\n            <p>Min: {w.main.temp_min}&#8457;</p>\n            <p>Max: {w.main.temp_max}&#8457;</p>\n          </div>\n          <div className=\"forecast_description\">\n            <p className=\"forecast_description_text\">{w.weather[0].main}</p>\n            <img\n              src={`https://openweathermap.org/img/w/${w.weather[0].icon}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={w.weather[0].description}\n            />\n          </div>\n          <p className=\"forecast_wind\">wind: {w.wind.speed} mph</p>\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default Forecast;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"../styles/forecast.css\";\n\nconst Spinner = () => (\n  <div className=\"loader-spinner\">\n    <Loader type=\"TailSpin\" color=\"#fff\" height={100} width={80} />\n    <p>Loading Forecast...</p>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/forecast.css\";\nimport Forecast from \"../components/forecast\";\nimport Spinner from \"./Spinner\";\nimport { lat, lon } from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nconst FiveDay = props => {\n  const [forecastData, setForecastData] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleLoadForecast = async () => {\n    if (lat && lon) {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=759c56787a1afffcc7c0185fe8bfb310&units=imperial`\n      );\n      const json = await response.json();\n\n      if (json) {\n        setForecastData(json.list);\n        console.log(json);\n        setCity(`${json.city.name}, ${json.city.country}`);\n      }\n    }\n  };\n\n  const handleUserLocationInput = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${\n        props.location.city\n      }&appid=759c56787a1afffcc7c0185fe8bfb310&units=imperial`\n    );\n    const json = await response.json();\n\n    if (json) {\n      setForecastData(json.list);\n      console.log(json);\n      setCity(`${json.city.name}, ${json.city.country}`);\n    }\n  };\n\n  useEffect(() => {\n    if (!props.location.city && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          setLat(latitude);\n          setLon(longitude);\n          handleLoadForecast();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    } else if (props.location.city) {\n      handleUserLocationInput();\n      console.log(props.location.city);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lat, lon]);\n\n  return (\n    <div className=\"forecast_parent\">\n      <div className=\"forecast_nav\">\n        <h2>Forecast </h2>\n        <Link to=\"/\" className=\"btn btn-dark ml-3\">\n          &larr; Home\n        </Link>\n      </div>\n      <h4 className=\"text-center\">{city}</h4>\n      {forecastData ? <Forecast forecastData={forecastData} /> : <Spinner />}\n    </div>\n  );\n};\n\nexport default FiveDay;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../App.css\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport FiveDay from \"./fiveDay\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={CurrentWeather} />\n    <Route exact path=\"/forecast\" component={FiveDay} />\n  </Switch>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}