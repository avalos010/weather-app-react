{"version":3,"sources":["components/CurrentWeather.js","components/forecast.js","components/Spinner.js","components/fiveDay.js","components/App.js","index.js"],"names":["CurrentWeather","state","location","thumbnail","title","description","temp","lon","lat","componentDidMount","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","_this","setState","handleWaitonLocation","alert","_callee","_this$state","url","response","result","regenerator_default","a","wrap","_context","prev","next","concat","fetch","sent","json","name","weather","icon","Math","floor","main","console","log","stop","_this$state2","this","react_default","createElement","className","style","height","width","src","alt","react_router_dom","to","Component","Forecast","_ref","forecastData","map","w","index","key","dt_txt","temp_min","temp_max","wind","speed","Spinner","react_loader_spinner_default","type","color","FiveDay","props","_useState","useState","_useState2","Object","slicedToArray","setForecastData","_useState3","_useState4","setLat","_useState5","_useState6","setLon","handleLoadForecast","asyncToGenerator","mark","list","apply","arguments","useEffect","components_forecast","components_Spinner","App","react_router","exact","path","render","components_CurrentWeather","fiveDay","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.46936cb7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport getLocation from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nclass CurrentWeather extends Component {\n  state = {\n    location: \"\",\n    thumbnail: \"\",\n    title: \"\",\n    description: \"\",\n    temp: 0,\n    lon: null,\n    lat: null\n  };\n\n  componentDidMount = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          this.setState({ lat: latitude, lon: longitude });\n          this.handleWaitonLocation();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    }\n  };\n\n  handleWaitonLocation = async () => {\n    const { lon, lat } = this.state;\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`;\n    const response = await fetch(url);\n    const result = await response.json();\n\n    result\n      ? this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        })\n      : console.log(\"loading\");\n  };\n\n  render() {\n    const { temp, title, thumbnail, description } = this.state;\n    return (\n      <div className=\"jumbotron  text-center\" style={{ height: \"95vh\" }}>\n        <h2 className=\"display-4 mt-3\">Current Weather</h2>\n        <div className=\"container\">\n          <div className=\"card p-3\">\n            <p className=\"lead font-weight-bold\">{title}</p>\n            <div className=\"m-3\">\n              <img\n                style={{ width: 80 }}\n                src={`http://openweathermap.org/img/w/${thumbnail}.png`}\n                className=\"mx-auto card-img-top\"\n                alt={description}\n              />\n            </div>\n            <div className=\"card-body \">\n              <p className=\"card-text\">\n                <span className=\"font-weight-bold\">{temp}Â°F</span>\n                <br />\n                {description}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <Link className=\" mt-3 btn btn-dark\" to=\"/forecast\">\n          See Forecast\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\n\nconst Forecast = ({ forecastData }) => (\n  <div className=\"forecast\">\n    {forecastData.map((w, index) => {\n      return (\n        <div className=\"forecast_container\" key={index}>\n          <p className=\"forcecast_date\">{w.dt_txt}</p>\n          <div className=\"forecast_min_max\">\n            <p>Min: {w.main.temp_min}&#8457;</p>\n            <p>Max: {w.main.temp_max}&#8457;</p>\n          </div>\n          <div className=\"forecast_description\">\n            <p className=\"forecast_description_text\">{w.weather[0].main}</p>\n            <img\n              src={`http://openweathermap.org/img/w/${w.weather[0].icon}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={w.weather[0].description}\n            />\n          </div>\n          <p className=\"forecast_wind\">wind: {w.wind.speed} mph</p>\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default Forecast;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"../styles/forecast.css\";\n\nconst Spinner = () => (\n  <div className=\"loader-spinner\">\n    <Loader type=\"TailSpin\" color=\"#fff\" height={100} width={80} />\n    <p>Loading Forecast...</p>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/forecast.css\";\nimport Forecast from \"../components/forecast\";\nimport Spinner from \"./Spinner\";\nimport { lat, lon } from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nconst FiveDay = props => {\n  const [forecastData, setForecastData] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleLoadForecast = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n    );\n    const json = await response.json();\n    setForecastData(json.list);\n    console.log(json.list);\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          setLat(latitude);\n          setLon(longitude);\n          handleLoadForecast();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lat, lon]);\n\n  return (\n    <div className=\"forecast_parent\">\n      <div className=\"forecast_nav\">\n        <h2>Forecast </h2>\n        <Link to=\"/\" className=\"btn btn-dark ml-3\">\n          &larr; Home\n        </Link>\n      </div>\n\n      {forecastData ? <Forecast forecastData={forecastData} /> : <Spinner />}\n    </div>\n  );\n};\n\nexport default FiveDay;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../App.css\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport FiveDay from \"./fiveDay\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={() => <CurrentWeather />} />\n    <Route exact path=\"/forecast\" render={() => <FiveDay />} />\n  </Switch>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}