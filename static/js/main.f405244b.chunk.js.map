{"version":3,"sources":["getCoordinates.js","components/CurrentWeather.js","components/forecast.js","components/Spinner.js","components/fiveDay.js","components/App.js","index.js"],"names":["lat","lon","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","alert","CurrentWeather","state","location","thumbnail","title","description","temp","componentDidMount","setTimeout","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","result","wrap","_context","prev","next","concat","fetch","sent","json","_this","setState","name","weather","icon","Math","floor","main","stop","_this$state","this","react_default","createElement","className","style","height","width","src","alt","react_router_dom","to","Component","Forecast","_ref","forecastData","map","w","index","key","dt_txt","temp_min","temp_max","wind","speed","Spinner","react_loader_spinner_default","type","color","FiveDay","props","_useState","useState","_useState2","slicedToArray","setForecastData","handleLoadForecast","list","console","log","apply","arguments","useEffect","components_forecast","components_Spinner","App","react_router","exact","path","render","components_CurrentWeather","fiveDay","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f405244b.chunk.js","sourcesContent":["var lat = null;\nvar lon = null;\n\nif(navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n        const {latitude, longitude} = position.coords;\n        lat = latitude;\n        lon = longitude;\n    }, () => alert('Please Allow Location'))\n    \n}\n\n\nexport {lat,lon};\n","import React, { Component } from \"react\";\nimport { lat, lon } from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nclass CurrentWeather extends Component {\n  state = {\n    location: \"\",\n    thumbnail: \"\",\n    title: \"\",\n    description: \"\",\n    temp: 0\n  };\n\n  componentDidMount = () => {\n    setTimeout(async () => {\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`;\n      const response = await fetch(url);\n      const result = await response.json();\n\n      this.setState({\n        title: result.name,\n        thumbnail: result.weather[0].icon,\n        description: result.weather[0].description,\n        temp: Math.floor(result.main.temp)\n      });\n    }, 0);\n  };\n\n  render() {\n    const { temp, title, thumbnail, description } = this.state;\n    return (\n      <div className=\"jumbotron  text-center\" style={{ height: \"95vh\" }}>\n        <h2 className=\"display-4 mt-3\">Current Weather</h2>\n        <div className=\"container\">\n          <div className=\"card p-3\">\n            <p className=\"lead font-weight-bold\">{title}</p>\n            <div className=\"m-3\">\n              <img\n                style={{ width: 80 }}\n                src={`http://openweathermap.org/img/w/${thumbnail}.png`}\n                className=\"mx-auto card-img-top\"\n                alt={description}\n              />\n            </div>\n            <div className=\"card-body \">\n              <p className=\"card-text\">\n                <span className=\"font-weight-bold\">{temp}Â°F</span>\n                <br />\n                {description}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <Link className=\" mt-3 btn btn-dark\" to=\"/forecast\">\n          See Forecast\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\n\nconst Forecast = ({ forecastData }) => (\n  <div className=\"forecast\">\n    {forecastData.map((w, index) => {\n      return (\n        <div className=\"forecast_container\" key={index}>\n          <p className=\"forcecast_date\">{w.dt_txt}</p>\n          <div className=\"forecast_min_max\">\n            <p>Min: {w.main.temp_min}&#8457;</p>\n            <p>Max: {w.main.temp_max}&#8457;</p>\n          </div>\n          <div className=\"forecast_description\">\n            <p className=\"forecast_description_text\">{w.weather[0].main}</p>\n            <img\n              src={`http://openweathermap.org/img/w/${w.weather[0].icon}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={w.weather[0].description}\n            />\n          </div>\n          <p className=\"forecast_wind\">wind: {w.wind.speed} mph</p>\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default Forecast;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"../styles/forecast.css\";\n\nconst Spinner = () => (\n  <div className=\"loader-spinner\">\n    <Loader type=\"TailSpin\" color=\"#fff\" height={100} width={80} />\n    <p>Loading Forecast...</p>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/forecast.css\";\nimport Forecast from \"../components/forecast\";\nimport Spinner from \"./Spinner\";\nimport { lat, lon } from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nconst FiveDay = props => {\n  const [forecastData, setForecastData] = useState(null);\n\n  const handleLoadForecast = async () => {\n    if (lat) {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n      );\n      const json = await response.json();\n      setForecastData(json.list);\n      console.log(json.list);\n    }\n  };\n\n  useEffect(() => {\n    handleLoadForecast();\n  }, []);\n\n  return (\n    <div className=\"forecast_parent\">\n      <div className=\"forecast_nav\">\n        <h2>Forecast </h2>\n        <Link to=\"/\" className=\"btn btn-dark ml-3\">\n          &larr; Home\n        </Link>\n      </div>\n\n      {forecastData ? <Forecast forecastData={forecastData} /> : <Spinner />}\n    </div>\n  );\n};\n\nexport default FiveDay;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../App.css\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport FiveDay from \"./fiveDay\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={() => <CurrentWeather />} />\n    <Route exact path=\"/forecast\" render={() => <FiveDay />} />\n  </Switch>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}