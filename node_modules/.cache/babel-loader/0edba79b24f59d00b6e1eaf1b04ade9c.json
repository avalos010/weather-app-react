{"ast":null,"code":"import _classCallCheck from \"/home/jluis/Documents/weather-app-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jluis/Documents/weather-app-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jluis/Documents/weather-app-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jluis/Documents/weather-app-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jluis/Documents/weather-app-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jluis/Documents/weather-app-react/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Navigation from './Navigation.js';\nimport CurrentWeather from './CurrentWeather.js';\nimport Input from './input.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      location: \"\",\n      thumbnail: '',\n      title: '',\n      description: '',\n      temp: 0,\n      lat: null,\n      long: null\n    };\n\n    _this.getWeather = function () {\n      var url = \"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(_this.state.lat, \"&lon=\").concat(_this.state.long, \"&appid=601eae66287223be5956bb277ffa86d5&units=imperial\");\n      var promiseResponse = fetch(url).then(function (response) {\n        return response.json();\n      });\n      return promiseResponse.then(function (result) {\n        _this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        });\n      });\n    };\n\n    _this.handleLocationUpdate = function (e) {\n      e.preventDefault();\n      var loc = e.target[0].value;\n\n      if (loc.length > 0) {\n        _this.setState({\n          location: loc\n        });\n\n        setTimeout(_this.getWeather, 1);\n        e.target[0].value = '';\n      }\n    };\n\n    _this.componentDidMount = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(_this.handleLocationSuccess, _this.handleLocatioError);\n      }\n    };\n\n    _this.handleLocationSuccess = function (position) {\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n\n      _this.setState({\n        lat: latitude,\n        long: longitude\n      });\n\n      _this.getWeather();\n    };\n\n    _this.handleLocatioError = function () {\n      alert('Please allow location');\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.state.title.length > 0 && React.createElement(CurrentWeather, {\n        title: this.state.title,\n        description: this.state.description,\n        temp: this.state.temp,\n        thumbnail: this.state.thumbnail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jluis/Documents/weather-app-react/src/components/App.js"],"names":["React","Component","Navigation","CurrentWeather","Input","App","state","location","thumbnail","title","description","temp","lat","long","getWeather","url","promiseResponse","fetch","then","response","json","result","setState","name","weather","icon","Math","floor","main","handleLocationUpdate","e","preventDefault","loc","target","value","length","setTimeout","componentDidMount","navigator","geolocation","getCurrentPosition","handleLocationSuccess","handleLocatioError","position","coords","latitude","longitude","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Navigation from './Navigation.js'\nimport CurrentWeather from './CurrentWeather.js'\nimport Input from './input.js';\n\nclass App extends Component {\n  state = {\n    location: \"\",\n    thumbnail:'',\n    title: '',\n    description: '',\n    temp: 0,\n    lat: null,\n    long: null\n  }\ngetWeather = () => {\n    let url = `https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.long}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`;\n    let promiseResponse = fetch(url).then(response => response.json());\n    return promiseResponse.then(result =>{\n      this.setState({\n        title: result.name,\n        thumbnail: result.weather[0].icon,\n        description: result.weather[0].description,\n        temp: Math.floor(result.main.temp)\n      })\n    });\n  }\n\n  handleLocationUpdate = (e) => {\n    e.preventDefault();\n    let loc = e.target[0].value;\n    if(loc.length > 0) {\n    this.setState({location: loc})\n    setTimeout(this.getWeather,1);\n      e.target[0].value = '';\n    }\n\n  }\n  componentDidMount = () => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.handleLocationSuccess, this.handleLocatioError)\n    }\n\n  }\n\n  handleLocationSuccess = (position) => {\n    const {latitude, longitude} = position.coords;\n    this.setState({\n      lat: latitude,\n      long: longitude\n    })\n\n    this.getWeather()\n  }\n\n  handleLocatioError = () => {\n    alert('Please allow location')\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        {this.state.title.length > 0 && <CurrentWeather\n          title={this.state.title}\n          description={this.state.description}\n          temp={this.state.temp}\n          thumbnail={this.state.thumbnail}\n          />}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}