{"version":3,"sources":["components/weatherInfo.js","components/CurrentWeather.js","components/forecast.js","components/Spinner.js","components/fiveDay.js","components/App.js","index.js"],"names":["WeatherInfo","_ref","title","thumbnail","temp","description","react_default","a","createElement","className","style","width","src","concat","alt","CurrentWeather","state","city","lon","lat","showInput","handleUserLocation","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","_this","setState","handleWaitonLocation","alert","handleUserInput","_callee","response","result","regenerator_default","wrap","_context","prev","next","fetch","sent","json","name","weather","icon","Math","floor","main","console","log","stop","_callee2","_this$state","url","_context2","_this2","this","_this$state2","height","weatherInfo","htmlFor","type","id","onChange","e","target","value","onClick","react_router_dom","to","pathname","Component","Forecast","forecastData","map","w","index","key","dt_txt","temp_min","temp_max","wind","speed","Spinner","react_loader_spinner_default","color","FiveDay","props","_useState","useState","_useState2","Object","slicedToArray","setForecastData","_useState3","_useState4","setLat","_useState5","_useState6","setLon","_useState7","_useState8","setCity","handleLoadForecast","asyncToGenerator","mark","list","country","apply","arguments","handleUserLocationInput","_ref2","location","useEffect","components_forecast","components_Spinner","App","react_router","exact","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a856f7cd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction WeatherInfo({ title, thumbnail, temp, description }) {\n  return (\n    <div className=\"container\">\n      <div className=\"card p-3\">\n        <p className=\"lead font-weight-bold\">{title}</p>\n        <div className=\"m-3\">\n          {thumbnail && (\n            <img\n              style={{ width: 80 }}\n              src={`https://openweathermap.org/img/w/${thumbnail}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={description}\n            />\n          )}\n        </div>\n        <div className=\"card-body \">\n          <p className=\"card-text\">\n            <span className=\"font-weight-bold\">{temp}Â°F</span>\n            <br />\n            {description}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherInfo;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport WeatherInfo from \"./weatherInfo\";\n\nclass CurrentWeather extends Component {\n  state = {\n    city: \"\",\n    thumbnail: \"\",\n    title: \"\",\n    description: \"\",\n    temp: 0,\n    lon: null,\n    lat: null,\n    showInput: true\n  };\n\n  handleUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          this.setState({ lat: latitude, lon: longitude, showInput: false });\n          this.handleWaitonLocation();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    }\n  };\n\n  handleUserInput = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.state.city\n      }&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n    );\n\n    const result = await response.json();\n\n    result\n      ? this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        })\n      : console.log(\"loading\");\n  };\n\n  handleWaitonLocation = async () => {\n    const { lon, lat } = this.state;\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`;\n    const response = await fetch(url);\n    const result = await response.json();\n\n    result\n      ? this.setState({\n          title: result.name,\n          thumbnail: result.weather[0].icon,\n          description: result.weather[0].description,\n          temp: Math.floor(result.main.temp)\n        })\n      : console.log(\"loading\");\n  };\n\n  render() {\n    const { temp, title, thumbnail, description, city } = this.state;\n    return (\n      <div className=\"jumbotron  text-center\" style={{ height: \"95vh\" }}>\n        <h2 className=\"display-4 mt-3\">Current Weather</h2>\n        {title && (\n          <WeatherInfo\n            temp={temp}\n            title={title}\n            thumbnail={thumbnail}\n            description={description}\n          />\n        )}\n        {!title && (\n          <div className=\"d-flex flex-column\">\n            <label htmlFor=\"location\">Enter City:</label>\n            <input\n              className=\" mx-auto border border-white rounded\"\n              type=\"text\"\n              id=\"location\"\n              onChange={e => this.setState({ city: e.target.value })}\n            />\n          </div>\n        )}\n        {!title && (\n          <div className=\"d-flex flex-row justify-content-center mt-3\">\n            <button\n              onClick={this.handleUserInput}\n              className=\"btn btn-dark ml-3\"\n            >\n              Search\n            </button>\n            <button\n              onClick={this.handleUserLocation}\n              className=\"btn btn-light ml-3\"\n            >\n              Find Me\n            </button>\n          </div>\n        )}\n        {title && (\n          <Link\n            state={this.state.city}\n            className=\" mt-3 btn btn-dark\"\n            to={{\n              pathname: \"/forecast\",\n              city\n            }}\n          >\n            See Forecast\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CurrentWeather;\n","import React from \"react\";\n\nconst Forecast = ({ forecastData }) => (\n  <div className=\"forecast\">\n    {forecastData.map((w, index) => {\n      return (\n        <div className=\"forecast_container\" key={index}>\n          <p className=\"forcecast_date\">{w.dt_txt}</p>\n          <div className=\"forecast_min_max\">\n            <p>Min: {w.main.temp_min}&#8457;</p>\n            <p>Max: {w.main.temp_max}&#8457;</p>\n          </div>\n          <div className=\"forecast_description\">\n            <p className=\"forecast_description_text\">{w.weather[0].main}</p>\n            <img\n              src={`http://openweathermap.org/img/w/${w.weather[0].icon}.png`}\n              className=\"mx-auto card-img-top\"\n              alt={w.weather[0].description}\n            />\n          </div>\n          <p className=\"forecast_wind\">wind: {w.wind.speed} mph</p>\n        </div>\n      );\n    })}\n  </div>\n);\n\nexport default Forecast;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"../styles/forecast.css\";\n\nconst Spinner = () => (\n  <div className=\"loader-spinner\">\n    <Loader type=\"TailSpin\" color=\"#fff\" height={100} width={80} />\n    <p>Loading Forecast...</p>\n  </div>\n);\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/forecast.css\";\nimport Forecast from \"../components/forecast\";\nimport Spinner from \"./Spinner\";\nimport { lat, lon } from \"../getCoordinates\";\nimport { Link } from \"react-router-dom\";\n\nconst FiveDay = props => {\n  const [forecastData, setForecastData] = useState(null);\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [city, setCity] = useState(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleLoadForecast = async () => {\n    if (lat && lon) {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n      );\n      const json = await response.json();\n\n      if (json) {\n        setForecastData(json.list);\n        console.log(json);\n        setCity(`${json.city.name}, ${json.city.country}`);\n      }\n    }\n  };\n\n  const handleUserLocationInput = async () => {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${\n        props.location.city\n      }&appid=601eae66287223be5956bb277ffa86d5&units=imperial`\n    );\n    const json = await response.json();\n\n    if (json) {\n      setForecastData(json.list);\n      console.log(json);\n      setCity(`${json.city.name}, ${json.city.country}`);\n    }\n  };\n\n  useEffect(() => {\n    if (!props.location.city && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const { latitude, longitude } = position.coords;\n          setLat(latitude);\n          setLon(longitude);\n          handleLoadForecast();\n        },\n        () => alert(\"Please Allow Location\")\n      );\n    } else if (props.location.city) {\n      handleUserLocationInput();\n      console.log(props.location.city);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lat, lon]);\n\n  return (\n    <div className=\"forecast_parent\">\n      <div className=\"forecast_nav\">\n        <h2>Forecast </h2>\n        <Link to=\"/\" className=\"btn btn-dark ml-3\">\n          &larr; Home\n        </Link>\n      </div>\n      <h4 className=\"text-center\">{city}</h4>\n      {forecastData ? <Forecast forecastData={forecastData} /> : <Spinner />}\n    </div>\n  );\n};\n\nexport default FiveDay;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"../App.css\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport FiveDay from \"./fiveDay\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" component={CurrentWeather} />\n    <Route exact path=\"/forecast\" component={FiveDay} />\n  </Switch>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}